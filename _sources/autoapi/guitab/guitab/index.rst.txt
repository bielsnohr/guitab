:py:mod:`guitab.guitab`
=======================

.. py:module:: guitab.guitab

.. autoapi-nested-parse::

   An interacive command line program that speeds up the process of writing
   guitar tabs.

   The user enters chords/fingering count by count with the final
   result being written to a text file.

   ..
       !! processed by numpydoc !!


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   guitab.guitab.GuitabShell




.. py:class:: GuitabShell(completekey='tab', stdin=None, stdout=None)

   Bases: :py:obj:`cmd.Cmd`

   
   A simple framework for writing line-oriented command interpreters.

   These are often useful for test harnesses, administrative tools, and
   prototypes that will later be wrapped in a more sophisticated interface.

   A Cmd instance or subclass instance is a line-oriented interpreter
   framework.  There is no good reason to instantiate Cmd itself; rather,
   it's useful as a superclass of an interpreter class you define yourself
   in order to inherit Cmd's methods and encapsulate action methods.















   ..
       !! processed by numpydoc !!
   .. py:attribute:: intro
      :annotation: = Welcome to guitab, an interactive command line program that accelerates the tab writing process....

      
















      ..
          !! processed by numpydoc !!

   .. py:attribute:: prompt
      :annotation: = (guitab) 

      
















      ..
          !! processed by numpydoc !!

   .. py:method:: move(self, direction, arg)

      
















      ..
          !! processed by numpydoc !!

   .. py:method:: do_forward(self, arg)

      
      The number of counts to go forward in the tab:  FORWARD 10

      The default is to move forward 1 space if no input is given to the command.















      ..
          !! processed by numpydoc !!

   .. py:method:: do_backward(self, arg)

      
      The number of counts to go backward in the tab:  BACKWARD 10

      The default is to move back 1 space if no input is given to the command.















      ..
          !! processed by numpydoc !!

   .. py:method:: do_chord(self, arg)

      
      The chord (i.e. finger positions) to write to the current position in the tab:  CHORD x 3 2 0 1 0

      The input order of strings runs from high E to low E.















      ..
          !! processed by numpydoc !!

   .. py:method:: do_author(self, arg: str)

      
      Set the author for the tab


      :Parameters:

          **arg** : str
              Author name

      :Returns:

          None
              ..













      ..
          !! processed by numpydoc !!

   .. py:method:: do_title(self, arg: str)

      
      Set the title for the tab


      :Parameters:

          **arg** : str
              Title of the tab

      :Returns:

          None
              ..













      ..
          !! processed by numpydoc !!

   .. py:method:: do_date(self, arg: str)

      
      Set the date for the tab


      :Parameters:

          **arg** : str
              Date the tab was created or updated in ISO 8601 format (i.e. YYYY-MM-DD)

      :Returns:

          None
              ..













      ..
          !! processed by numpydoc !!

   .. py:method:: set_info(self, key: str, value: str)

      
















      ..
          !! processed by numpydoc !!

   .. py:method:: do_bye(self, arg)

      
      Stop editing tab and exit:  BYE

      The current tab is saved to a file if one has been previously specified by RECORD.















      ..
          !! processed by numpydoc !!

   .. py:method:: do_print(self, arg)

      
      Print the entirety of the tab: PRINT
















      ..
          !! processed by numpydoc !!

   .. py:method:: do_load(self, arg: str)

      
      Load only tab data from specified file (not metadata)


      :Parameters:

          **arg** : str
              File name for file to load tab data from

      :Returns:

          None
              ..













      ..
          !! processed by numpydoc !!

   .. py:method:: do_loadall(self, arg: str)

      
      Load tab data and metadata from specified file


      :Parameters:

          **arg** : str
              File name for file to load tab data from

      :Returns:

          None
              ..













      ..
          !! processed by numpydoc !!

   .. py:method:: do_save(self, arg: str)

      
      Save tab data and metadata to specified file


      :Parameters:

          **arg** : str
              File name for file to save tab data to

      :Returns:

          None
              ..













      ..
          !! processed by numpydoc !!

   .. py:method:: onecmd(self, line: str) -> bool

      
      Catch acceptable exceptions caused by users
















      ..
          !! processed by numpydoc !!

   .. py:method:: precmd(self, line)

      
      Hook method executed just before the command line is
      interpreted, but after the input prompt is generated and issued.
















      ..
          !! processed by numpydoc !!


